name: 🚀 Deploy
on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request: {}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: ⚡️ Vitest
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🏄 Copy test env vars
        run: cp .env.example .env

      - name: ⚡️ Run Vitest
        run: npm run test

  lint:
    name: 🔬 Lint
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 🔬 Lint
        run: npm run lint

  format:
    name: 📐 Format
    runs-on: ubuntu-latest
    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3

      - name: ⎔ Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: 📥 Download deps
        uses: bahmutov/npm-install@v1

      - name: 📐 Format
        run: npm run format

  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: [test, lint, format]
    # only deploy on pushes to main branch
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v3
        with:
          # fetch-depth for Sentry release creation
          fetch-depth: 0

      - name: 🎈 Setup Fly
        uses: superfly/flyctl-actions/setup-flyctl@v1.4

      - name: 🚀 Deploy
        run: flyctl deploy --remote-only
          --build-arg COMMIT_SHA=${{ github.sha }}
          --build-arg CI=${CI}
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}

      - name: 🧭 Create Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: fitplot
          SENTRY_PROJECT: fitplot-api
        with:
          environment: production
